"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var Te=process.env.AZION_DEBUG&&process.env.AZION_DEBUG==="true",c=e=>_nullishCoalesce(_nullishCoalesce(e, () => (process.env.AZION_TOKEN)), () => ("")),s=e=>_nullishCoalesce(e, () => (!!Te)),y=(e,p,t)=>{let n;if(e&&typeof e=="object"){let i=Object.keys(e)[0];if(i&&typeof e[i]=="string")n=e[i];else if("detail"in e&&typeof e.detail=="string")n=e.detail;else if("message"in e&&typeof e.message=="string")n=e.message;else if("error"in e){if(typeof e.error=="string")n=e.error;else if(typeof e.error=="object"&&e.error!==null){let a=Object.keys(e.error)[0];a&&typeof e.error[a]=="string"?n=e.error[a]:"message"in e.error&&typeof e.error.message=="string"&&(n=e.error.message)}}}else typeof e=="string"&&(n=e);return{message:n||t,operation:p}};var W="https://api.azionapi.net/edge_applications",Q=async(e,p,t,n)=>{try{let{page:i=1,page_size:a=10,sort:r="name",order:o="asc"}=t||{},m=new URLSearchParams({page:String(i),page_size:String(a),sort:r,order:o}),h=await(await fetch(`${W}/${p}/cache_settings?${m.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",h),h}catch(i){throw n&&console.error("Error getting cache settings:",i),i}},k=async(e,p,t,n)=>{try{let a=await(await fetch(`${W}/${p}/cache_settings/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error getting cache setting by ID:",i),i}},ee=async(e,p,t,n)=>{try{let a=await(await fetch(`${W}/${p}/cache_settings`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error creating cache setting:",i),i}},te=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${W}/${p}/cache_settings/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error updating cache setting:",a),a}},ne=async(e,p,t,n)=>{try{let a=await(await fetch(`${W}/${p}/cache_settings/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error deleting cache setting:",i),i}};var f=async(e,p,t,n)=>{try{return{data:(await ee(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _2 => _2.debug])))).results}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to create cache setting",operation:"create cache setting"}}}},z=async(e,p,t,n)=>{try{return{data:(await k(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _3 => _3.debug])))).results}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get cache setting",operation:"get cache setting"}}}},C=async(e,p,t,n)=>{try{let i=await Q(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _4 => _4.debug]))),a=i.results.map(r=>({...r}));return{data:{count:i.count,total_pages:i.total_pages,schema_version:i.schema_version,links:i.links,results:a}}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get cache settings",operation:"get cache settings"}}}},I=async(e,p,t,n,i)=>{try{return{data:(await te(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _5 => _5.debug])))).results}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to update cache setting",operation:"update cache setting"}}}},P=async(e,p,t,n)=>{try{return await ne(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _6 => _6.debug]))),{data:void 0}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to delete cache setting",operation:"delete cache setting"}}}},$e= exports.createCacheSetting =({applicationId:e,data:p,options:t})=>f(c(),e,p,t),Ee= exports.getCacheSetting =({applicationId:e,cacheSettingId:p,options:t})=>z(c(),e,p,t),Le= exports.getCacheSettings =({applicationId:e,params:p,options:t})=>C(c(),e,p,t),je= exports.updateCacheSetting =({applicationId:e,cacheSettingId:p,data:t,options:n})=>I(c(),e,p,t,n),Ue= exports.deleteCacheSetting =({applicationId:e,cacheSettingId:p,options:t})=>P(c(),e,p,t);var q="https://api.azionapi.net/edge_applications",ie=async(e,p,t,n)=>{try{let{page:i=1,page_size:a=10,sort:r="name",order:o="asc"}=t||{},m=new URLSearchParams({page:String(i),page_size:String(a),sort:r,order:o}),h=await(await fetch(`${q}/${p}/device_groups?${m.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",h),h}catch(i){throw n&&console.error("Error getting device groups:",i),i}},re=async(e,p,t,n)=>{try{let a=await(await fetch(`${q}/${p}/device_groups/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error getting device group by ID:",i),i}},ae=async(e,p,t,n)=>{try{let a=await(await fetch(`${q}/${p}/device_groups`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error creating device group:",i),i}},oe=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${q}/${p}/device_groups/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error updating device group:",a),a}},se=async(e,p,t,n)=>{try{let a=await(await fetch(`${q}/${p}/device_groups/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error deleting device group:",i),i}};var v=async(e,p,t,n)=>{try{let{results:i}=await ae(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _7 => _7.debug])));return{data:i}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to create device group",operation:"create device group"}}}},O=async(e,p,t,n)=>{try{return await se(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _8 => _8.debug]))),{data:void 0}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to delete device group",operation:"delete device group"}}}},_=async(e,p,t,n)=>{try{let{results:i}=await re(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _9 => _9.debug])));return{data:i}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get device group",operation:"get device group"}}}},S=async(e,p,t,n)=>{try{return{data:await ie(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _10 => _10.debug])))}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get device groups",operation:"get device groups"}}}},x=async(e,p,t,n,i)=>{try{let{results:a}=await oe(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _11 => _11.debug])));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to update device group",operation:"update device group"}}}},Me= exports.createDeviceGroup =({applicationId:e,data:p,options:t})=>v(c(),e,p,t),We= exports.deleteDeviceGroup =({applicationId:e,deviceGroupId:p,options:t})=>O(c(),e,p,t),qe= exports.getDeviceGroup =({applicationId:e,deviceGroupId:p,options:t})=>_(c(),e,p,t),Be= exports.getDeviceGroups =({applicationId:e,params:p,options:t})=>S(c(),e,p,t),Ke= exports.updateDeviceGroup =({applicationId:e,deviceGroupId:p,data:t,options:n})=>x(c(),e,p,t,n);var B="https://api.azionapi.net/edge_applications",pe=async(e,p,t,n)=>{try{let{page:i=1,page_size:a=10,sort:r="asc",order_by:o="name",filter:m=""}=t||{},b=new URLSearchParams({page:String(i),page_size:String(a),sort:r,order_by:o,filter:m}),R=await(await fetch(`${B}/${p}/functions_instances?${b.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",R),R}catch(i){throw n&&console.error("Error listing function instances:",i),i}},ce=async(e,p,t,n)=>{try{let a=await(await fetch(`${B}/${p}/functions_instances/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error getting function instance by ID:",i),i}},ue=async(e,p,t,n)=>{try{let a=await(await fetch(`${B}/${p}/functions_instances`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error creating function instance:",i),i}},de=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${B}/${p}/functions_instances/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error updating function instance:",a),a}},ge=async(e,p,t,n)=>{try{let a=await(await fetch(`${B}/${p}/functions_instances/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error deleting function instance:",i),i}};var G=async(e,p,t,n)=>{try{return{data:(await ue(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _12 => _12.debug])))).results}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to create function instance",operation:"create function instance"}}}},w=async(e,p,t,n)=>{try{return await ge(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _13 => _13.debug]))),{data:void 0}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to delete function instance",operation:"delete function instance"}}}},F=async(e,p,t,n)=>{try{let{results:i}=await ce(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _14 => _14.debug])));return{data:i}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get function instance",operation:"get function instance"}}}},D=async(e,p,t,n)=>{try{return{data:await pe(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _15 => _15.debug])))}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get function instances",operation:"get function instances"}}}},T=async(e,p,t,n,i)=>{try{let{results:a}=await de(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _16 => _16.debug])));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to update function instance",operation:"update function instance"}}}},Ne= exports.createFunctionInstance =({applicationId:e,data:p,options:t})=>G(c(),e,p,t),Je= exports.deleteFunctionInstance =({applicationId:e,functionInstanceId:p,options:t})=>w(c(),e,p,t),Ze= exports.getFunctionInstance =({applicationId:e,functionInstanceId:p,options:t})=>F(c(),e,p,t),Ve= exports.getFunctionInstances =({applicationId:e,params:p,options:t})=>D(c(),e,p,t),He= exports.updateFunctionInstance =({applicationId:e,functionInstanceId:p,data:t,options:n})=>T(c(),e,p,t,n);var K="https://api.azionapi.net/edge_applications",le=async(e,p,t,n)=>{try{let{page:i=1,page_size:a=10,sort:r="name",order:o="asc",filter:m=""}=t||{},b=new URLSearchParams({page:String(i),page_size:String(a),sort:r,order:o,filter:m}),R=await(await fetch(`${K}/${p}/origins?${b.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",R),R}catch(i){throw n&&console.error("Error listing origins:",i),i}},Ae=async(e,p,t,n)=>{try{let a=await(await fetch(`${K}/${p}/origins/${t}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error getting origin by key:",i),i}},me=async(e,p,t,n)=>{try{let a=await(await fetch(`${K}/${p}/origins`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error creating origin:",i),i}},be=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${K}/${p}/origins/${t}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error updating origin:",a),a}},he=async(e,p,t,n)=>{try{let a=await(await fetch(`${K}/${p}/origins/${t}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error deleting origin:",i),i}};var $=async(e,p,t,n)=>{try{let{results:i}=await me(e,p,t,s(_optionalChain([n, 'optionalAccess', _17 => _17.debug])));return{data:i}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to create origin",operation:"create origin"}}}},E=async(e,p,t,n)=>{try{return await he(e,p,t,s(_optionalChain([n, 'optionalAccess', _18 => _18.debug]))),{data:void 0}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to delete origin",operation:"delete origin"}}}},L=async(e,p,t,n)=>{try{let{results:i}=await Ae(e,p,t,s(_optionalChain([n, 'optionalAccess', _19 => _19.debug])));return{data:i}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get origin",operation:"get origin"}}}},j=async(e,p,t,n)=>{try{return{data:await le(e,p,t,s(_optionalChain([n, 'optionalAccess', _20 => _20.debug])))}}catch(i){return{error:{message:i instanceof Error?i.message:"Failed to get origins",operation:"get origins"}}}},U=async(e,p,t,n,i)=>{try{let{results:a}=await be(e,p,t,n,s(_optionalChain([i, 'optionalAccess', _21 => _21.debug])));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to update origin",operation:"update origin"}}}},Ye= exports.createOrigin =({applicationId:e,data:p,options:t})=>$(c(),e,p,t),Xe= exports.deleteOrigin =({applicationId:e,originKey:p,options:t})=>E(c(),e,p,t),Qe= exports.getOrigin =({applicationId:e,originKey:p,options:t})=>L(c(),e,p,t),ke= exports.getOrigins =({applicationId:e,params:p,options:t})=>j(c(),e,p,t),et= exports.updateOrigin =({applicationId:e,originKey:p,data:t,options:n})=>U(c(),e,p,t,n);var N="https://api.azionapi.net/edge_applications",Re=async(e,p,t,n,i)=>{try{let{page:a=1,page_size:r=10,sort:o="name",order:m="asc"}=n||{},b=new URLSearchParams({page:String(a),page_size:String(r),sort:o,order:m}),R=await(await fetch(`${N}/${p}/rules_engine/${t}/rules?${b.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return i&&console.log("Response:",R),R}catch(a){throw i&&console.error("Error listing rules:",a),a}},ye=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${N}/${p}/rules_engine/${t}/rules/${n}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error getting rule by ID:",a),a}},fe=async(e,p,t,n,i)=>{try{let r=await(await fetch(`${N}/${p}/rules_engine/${t}/rules`,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(n)})).json();return i&&console.log("Response:",r),r}catch(a){throw i&&console.error("Error creating rule:",a),a}},ze=async(e,p,t,n,i,a)=>{try{let o=await(await fetch(`${N}/${p}/rules_engine/${t}/rules/${n}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(i)})).json();return a&&console.log("Response:",o),o}catch(r){throw a&&console.error("Error updating rule:",r),r}},Ce=async(e,p,t,n,i)=>{try{let a=await fetch(`${N}/${p}/rules_engine/${t}/rules/${n}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}});i&&console.log("Response status:",a.status)}catch(a){throw i&&console.error("Error deleting rule:",a),a}};var tt=({applicationId:e,phase:p,data:t,options:n})=>u(c(),e,p,t,n),nt= exports.getRule =({applicationId:e,phase:p,ruleId:t,options:n})=>d(c(),e,p,t,n),it= exports.getRules =({applicationId:e,phase:p,params:t,options:n})=>g(c(),e,p,t,n),rt= exports.updateRule =({applicationId:e,phase:p,ruleId:t,data:n,options:i})=>l(c(),e,p,t,n,i),at= exports.deleteRule =({applicationId:e,phase:p,ruleId:t,options:n})=>A(c(),e,p,t,n),u=async(e,p,t,n,i)=>{try{let{results:a}=await fe(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _22 => _22.debug])));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to create rule",operation:"create rule"}}}},d=async(e,p,t,n,i)=>{try{let{results:a}=await ye(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _23 => _23.debug])));return{data:a}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to get rule",operation:"get rule"}}}},g=async(e,p,t,n,i)=>{try{return{data:await Re(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _24 => _24.debug])))}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to get rules",operation:"get rules"}}}},l=async(e,p,t,n,i,a)=>{try{let{results:r}=await ze(c(e),p,t,n,i,s(_optionalChain([a, 'optionalAccess', _25 => _25.debug])));return{data:r}}catch(r){return{error:{message:r instanceof Error?r.message:"Failed to update rule",operation:"update rule"}}}},A=async(e,p,t,n,i)=>{try{return await Ce(c(e),p,t,n,s(_optionalChain([i, 'optionalAccess', _26 => _26.debug]))),{data:void 0}}catch(a){return{error:{message:a instanceof Error?a.message:"Failed to delete rule",operation:"delete rule"}}}};var M="https://api.azionapi.net/edge_applications",Ie=async(e,p,t)=>{try{let{order_by:n="name",sort:i="asc",page:a=1,page_size:r=10}=p||{},o=new URLSearchParams({order_by:n,sort:i,page:String(a),page_size:String(r)}),b=await(await fetch(`${M}?${o.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return t&&console.log("Response:",b),b}catch(n){throw t&&console.error("Error getting all applications:",n),n}},Pe=async(e,p,t)=>{try{let i=await(await fetch(`${M}/${p}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return t&&console.log("Response:",i),i}catch(n){throw t&&console.error("Error getting application by ID:",n),n}},ve=async(e,p,t)=>{try{let i=await(await fetch(M,{method:"POST",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(p)})).json();return t&&console.log("Response:",i),i}catch(n){throw t&&console.error("Error creating application:",n),n}},Oe=async(e,p,t,n)=>{try{let a=await(await fetch(`${M}/${p}`,{method:"PUT",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error updating application:",i),i}},_e=async(e,p,t,n)=>{try{let a=await(await fetch(`${M}/${p}`,{method:"PATCH",headers:{Accept:"application/json; version=3","Content-Type":"application/json",Authorization:`Token ${e}`},body:JSON.stringify(t)})).json();return n&&console.log("Response:",a),a}catch(i){throw n&&console.error("Error patching application:",i),i}},Se=async(e,p,t)=>{try{let i=await(await fetch(`${M}/${p}`,{method:"DELETE",headers:{Accept:"application/json; version=3",Authorization:`Token ${e}`}})).json();return t&&console.log("Response:",i),i}catch(n){throw t&&console.error("Error deleting application:",n),n}};var J=async(e,p,t)=>{let n=await ve(c(e),p,s(_optionalChain([t, 'optionalAccess', _27 => _27.debug])));if(!n||!n.results)return{error:y(n,"post application","Failed to post application")};let i=_optionalChain([n, 'access', _28 => _28.results, 'optionalAccess', _29 => _29.id]);return{data:{...n.results,cache:{createCacheSetting:r=>f(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _30 => _30.debug]))}),getCacheSetting:r=>z(e,i,r.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _31 => _31.debug]))}),getCacheSettings:r=>C(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _32 => _32.debug]))}),updateCacheSetting:r=>I(e,i,r.cacheSettingId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _33 => _33.debug]))}),deleteCacheSetting:r=>P(e,i,r.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _34 => _34.debug]))})},origins:{createOrigin:r=>$(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _35 => _35.debug]))}),getOrigin:r=>L(e,i,r.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _36 => _36.debug]))}),getOrigins:r=>j(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _37 => _37.debug]))}),updateOrigin:r=>U(e,i,r.originKey,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _38 => _38.debug]))}),deleteOrigin:r=>E(e,i,r.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _39 => _39.debug]))})},rules:{request:{createRule:r=>u(e,i,"request",r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _40 => _40.debug]))}),getRule:r=>d(e,i,"request",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _41 => _41.debug]))}),getRules:r=>g(e,i,"request",r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _42 => _42.debug]))}),updateRule:r=>l(e,i,"request",r.ruleId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _43 => _43.debug]))}),deleteRule:r=>A(e,i,"request",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _44 => _44.debug]))})},response:{createRule:r=>u(e,i,"response",r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _45 => _45.debug]))}),getRule:r=>d(e,i,"response",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _46 => _46.debug]))}),getRules:r=>g(e,i,"response",r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _47 => _47.debug]))}),updateRule:r=>l(e,i,"response",r.ruleId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _48 => _48.debug]))}),deleteRule:r=>A(e,i,"response",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _49 => _49.debug]))})}},devices:{createDeviceGroup:r=>v(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _50 => _50.debug]))}),getDeviceGroup:r=>_(e,i,r.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _51 => _51.debug]))}),getDeviceGroups:r=>S(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _52 => _52.debug]))}),updateDeviceGroup:r=>x(e,i,r.deviceGroupId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _53 => _53.debug]))}),deleteDeviceGroup:r=>O(e,i,r.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _54 => _54.debug]))})},functions:{createFunctionInstance:r=>G(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _55 => _55.debug]))}),getFunctionInstance:r=>F(e,i,r.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _56 => _56.debug]))}),getFunctionInstances:r=>D(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _57 => _57.debug]))}),updateFunctionInstance:r=>T(e,i,r.functionInstanceId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _58 => _58.debug]))}),deleteFunctionInstance:r=>w(e,i,r.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _59 => _59.debug]))})}}}},Z=async(e,p,t)=>{let n=await Pe(c(e),p,s(_optionalChain([t, 'optionalAccess', _60 => _60.debug])));if(!n||!n.results)return{error:y(n,"get application","Failed to get application")};let i=n.results.id;return{data:{...n.results,cache:{createCacheSetting:r=>f(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _61 => _61.debug]))}),getCacheSetting:r=>z(e,i,r.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _62 => _62.debug]))}),getCacheSettings:r=>C(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _63 => _63.debug]))}),updateCacheSetting:r=>I(e,i,r.cacheSettingId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _64 => _64.debug]))}),deleteCacheSetting:r=>P(e,i,r.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _65 => _65.debug]))})},origins:{createOrigin:r=>$(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _66 => _66.debug]))}),getOrigin:r=>L(e,i,r.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _67 => _67.debug]))}),getOrigins:r=>j(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _68 => _68.debug]))}),updateOrigin:r=>U(e,i,r.originKey,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _69 => _69.debug]))}),deleteOrigin:r=>E(e,i,r.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _70 => _70.debug]))})},rules:{request:{createRule:r=>u(e,i,"request",r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _71 => _71.debug]))}),getRule:r=>d(e,i,"request",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _72 => _72.debug]))}),getRules:r=>g(e,i,"request",r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _73 => _73.debug]))}),updateRule:r=>l(e,i,"request",r.ruleId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _74 => _74.debug]))}),deleteRule:r=>A(e,i,"request",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _75 => _75.debug]))})},response:{createRule:r=>u(e,i,"response",r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _76 => _76.debug]))}),getRule:r=>d(e,i,"response",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _77 => _77.debug]))}),getRules:r=>g(e,i,"response",r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _78 => _78.debug]))}),updateRule:r=>l(e,i,"response",r.ruleId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _79 => _79.debug]))}),deleteRule:r=>A(e,i,"response",r.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _80 => _80.debug]))})}},devices:{createDeviceGroup:r=>v(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _81 => _81.debug]))}),getDeviceGroup:r=>_(e,i,r.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _82 => _82.debug]))}),getDeviceGroups:r=>S(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _83 => _83.debug]))}),updateDeviceGroup:r=>x(e,i,r.deviceGroupId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _84 => _84.debug]))}),deleteDeviceGroup:r=>O(e,i,r.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _85 => _85.debug]))})},functions:{createFunctionInstance:r=>G(e,i,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _86 => _86.debug]))}),getFunctionInstance:r=>F(e,i,r.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _87 => _87.debug]))}),getFunctionInstances:r=>D(e,i,r.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _88 => _88.debug]))}),updateFunctionInstance:r=>T(e,i,r.functionInstanceId,r.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _89 => _89.debug]))}),deleteFunctionInstance:r=>w(e,i,r.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _90 => _90.debug]))})}}}},V=async(e,p,t)=>{let n=await Ie(c(e),p,s(_optionalChain([t, 'optionalAccess', _91 => _91.debug])));if(!n||!n.results)return{error:y(n,"get applications","Failed to get applications")};let i=n.results.map(a=>{let r=a.id;return{...a,cache:{createCacheSetting:o=>f(e,r,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _92 => _92.debug]))}),getCacheSetting:o=>z(e,r,o.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _93 => _93.debug]))}),getCacheSettings:o=>C(e,r,o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _94 => _94.debug]))}),updateCacheSetting:o=>I(e,r,o.cacheSettingId,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _95 => _95.debug]))}),deleteCacheSetting:o=>P(e,r,o.cacheSettingId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _96 => _96.debug]))})},origins:{createOrigin:o=>$(e,r,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _97 => _97.debug]))}),getOrigin:o=>L(e,r,o.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _98 => _98.debug]))}),getOrigins:o=>j(e,r,o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _99 => _99.debug]))}),updateOrigin:o=>U(e,r,o.originKey,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _100 => _100.debug]))}),deleteOrigin:o=>E(e,r,o.originKey,{...t,debug:s(_optionalChain([t, 'optionalAccess', _101 => _101.debug]))})},rules:{request:{createRule:o=>u(e,r,"request",o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _102 => _102.debug]))}),getRule:o=>d(e,r,"request",o.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _103 => _103.debug]))}),getRules:o=>g(e,r,"request",o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _104 => _104.debug]))}),updateRule:o=>l(e,r,"request",o.ruleId,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _105 => _105.debug]))}),deleteRule:o=>A(e,r,"request",o.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _106 => _106.debug]))})},response:{createRule:o=>u(e,r,"response",o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _107 => _107.debug]))}),getRule:o=>d(e,r,"response",o.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _108 => _108.debug]))}),getRules:o=>g(e,r,"response",o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _109 => _109.debug]))}),updateRule:o=>l(e,r,"response",o.ruleId,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _110 => _110.debug]))}),deleteRule:o=>A(e,r,"response",o.ruleId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _111 => _111.debug]))})}},devices:{createDeviceGroup:o=>v(e,r,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _112 => _112.debug]))}),getDeviceGroup:o=>_(e,r,o.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _113 => _113.debug]))}),getDeviceGroups:o=>S(e,r,o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _114 => _114.debug]))}),updateDeviceGroup:o=>x(e,r,o.deviceGroupId,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _115 => _115.debug]))}),deleteDeviceGroup:o=>O(e,r,o.deviceGroupId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _116 => _116.debug]))})},functions:{createFunctionInstance:o=>G(e,r,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _117 => _117.debug]))}),getFunctionInstance:o=>F(e,r,o.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _118 => _118.debug]))}),getFunctionInstances:o=>D(e,r,o.params,{...t,debug:s(_optionalChain([t, 'optionalAccess', _119 => _119.debug]))}),updateFunctionInstance:o=>T(e,r,o.functionInstanceId,o.data,{...t,debug:s(_optionalChain([t, 'optionalAccess', _120 => _120.debug]))}),deleteFunctionInstance:o=>w(e,r,o.functionInstanceId,{...t,debug:s(_optionalChain([t, 'optionalAccess', _121 => _121.debug]))})}}});return{data:{...n,results:i}}},H=async(e,p,t,n)=>{let i=await Oe(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _122 => _122.debug])));if(!i||!i.results)return{error:y(i,"put application","Failed to put application")};let a=i.results.id;return{data:{...i.results,cache:{createCacheSetting:o=>f(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _123 => _123.debug]))}),getCacheSetting:o=>z(e,a,o.cacheSettingId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _124 => _124.debug]))}),getCacheSettings:o=>C(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _125 => _125.debug]))}),updateCacheSetting:o=>I(e,a,o.cacheSettingId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _126 => _126.debug]))}),deleteCacheSetting:o=>P(e,a,o.cacheSettingId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _127 => _127.debug]))})},origins:{createOrigin:o=>$(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _128 => _128.debug]))}),getOrigin:o=>L(e,a,o.originKey,{...n,debug:s(_optionalChain([n, 'optionalAccess', _129 => _129.debug]))}),getOrigins:o=>j(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _130 => _130.debug]))}),updateOrigin:o=>U(e,a,o.originKey,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _131 => _131.debug]))}),deleteOrigin:o=>E(e,a,o.originKey,{...n,debug:s(_optionalChain([n, 'optionalAccess', _132 => _132.debug]))})},rules:{request:{createRule:o=>u(e,a,"request",o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _133 => _133.debug]))}),getRule:o=>d(e,a,"request",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _134 => _134.debug]))}),getRules:o=>g(e,a,"request",o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _135 => _135.debug]))}),updateRule:o=>l(e,a,"request",o.ruleId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _136 => _136.debug]))}),deleteRule:o=>A(e,a,"request",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _137 => _137.debug]))})},response:{createRule:o=>u(e,a,"response",o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _138 => _138.debug]))}),getRule:o=>d(e,a,"response",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _139 => _139.debug]))}),getRules:o=>g(e,a,"response",o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _140 => _140.debug]))}),updateRule:o=>l(e,a,"response",o.ruleId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _141 => _141.debug]))}),deleteRule:o=>A(e,a,"response",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _142 => _142.debug]))})}},devices:{createDeviceGroup:o=>v(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _143 => _143.debug]))}),getDeviceGroup:o=>_(e,a,o.deviceGroupId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _144 => _144.debug]))}),getDeviceGroups:o=>S(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _145 => _145.debug]))}),updateDeviceGroup:o=>x(e,a,o.deviceGroupId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _146 => _146.debug]))}),deleteDeviceGroup:o=>O(e,a,o.deviceGroupId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _147 => _147.debug]))})},functions:{createFunctionInstance:o=>G(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _148 => _148.debug]))}),getFunctionInstance:o=>F(e,a,o.functionInstanceId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _149 => _149.debug]))}),getFunctionInstances:o=>D(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _150 => _150.debug]))}),updateFunctionInstance:o=>T(e,a,o.functionInstanceId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _151 => _151.debug]))}),deleteFunctionInstance:o=>w(e,a,o.functionInstanceId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _152 => _152.debug]))})}}}},Y=async(e,p,t,n)=>{let i=await _e(c(e),p,t,s(_optionalChain([n, 'optionalAccess', _153 => _153.debug])));if(!i||!i.results)return{error:y(i,"patch application","Failed to patch application")};let a=i.results.id;return{data:{...i.results,cache:{createCacheSetting:o=>f(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _154 => _154.debug]))}),getCacheSetting:o=>z(e,a,o.cacheSettingId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _155 => _155.debug]))}),getCacheSettings:o=>C(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _156 => _156.debug]))}),updateCacheSetting:o=>I(e,a,o.cacheSettingId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _157 => _157.debug]))}),deleteCacheSetting:o=>P(e,a,o.cacheSettingId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _158 => _158.debug]))})},origins:{createOrigin:o=>$(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _159 => _159.debug]))}),getOrigin:o=>L(e,a,o.originKey,{...n,debug:s(_optionalChain([n, 'optionalAccess', _160 => _160.debug]))}),getOrigins:o=>j(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _161 => _161.debug]))}),updateOrigin:o=>U(e,a,o.originKey,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _162 => _162.debug]))}),deleteOrigin:o=>E(e,a,o.originKey,{...n,debug:s(_optionalChain([n, 'optionalAccess', _163 => _163.debug]))})},rules:{request:{createRule:o=>u(e,a,"request",o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _164 => _164.debug]))}),getRule:o=>d(e,a,"request",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _165 => _165.debug]))}),getRules:o=>g(e,a,"request",o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _166 => _166.debug]))}),updateRule:o=>l(e,a,"request",o.ruleId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _167 => _167.debug]))}),deleteRule:o=>A(e,a,"request",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _168 => _168.debug]))})},response:{createRule:o=>u(e,a,"response",o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _169 => _169.debug]))}),getRule:o=>d(e,a,"response",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _170 => _170.debug]))}),getRules:o=>g(e,a,"response",o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _171 => _171.debug]))}),updateRule:o=>l(e,a,"response",o.ruleId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _172 => _172.debug]))}),deleteRule:o=>A(e,a,"response",o.ruleId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _173 => _173.debug]))})}},devices:{createDeviceGroup:o=>v(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _174 => _174.debug]))}),getDeviceGroup:o=>_(e,a,o.deviceGroupId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _175 => _175.debug]))}),getDeviceGroups:o=>S(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _176 => _176.debug]))}),updateDeviceGroup:o=>x(e,a,o.deviceGroupId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _177 => _177.debug]))}),deleteDeviceGroup:o=>O(e,a,o.deviceGroupId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _178 => _178.debug]))})},functions:{createFunctionInstance:o=>G(e,a,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _179 => _179.debug]))}),getFunctionInstance:o=>F(e,a,o.functionInstanceId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _180 => _180.debug]))}),getFunctionInstances:o=>D(e,a,o.params,{...n,debug:s(_optionalChain([n, 'optionalAccess', _181 => _181.debug]))}),updateFunctionInstance:o=>T(e,a,o.functionInstanceId,o.data,{...n,debug:s(_optionalChain([n, 'optionalAccess', _182 => _182.debug]))}),deleteFunctionInstance:o=>w(e,a,o.functionInstanceId,{...n,debug:s(_optionalChain([n, 'optionalAccess', _183 => _183.debug]))})}}}},X=async(e,p,t)=>{try{return await Se(c(e),p,s(_optionalChain([t, 'optionalAccess', _184 => _184.debug]))),{data:void 0}}catch(n){return{error:y(n,"delete application","Failed to delete application")}}},ot= exports.createApplication =({data:e,options:p})=>J(c(),e,p),st= exports.getApplication =({applicationId:e,options:p})=>Z(c(),e,p),pt= exports.getApplications =e=>V(c(),_optionalChain([e, 'optionalAccess', _185 => _185.params]),_optionalChain([e, 'optionalAccess', _186 => _186.options])),ct= exports.putApplication =({applicationId:e,data:p,options:t})=>H(c(),e,p,t),ut= exports.patchApplication =({applicationId:e,data:p,options:t})=>Y(c(),e,p,t),dt= exports.deleteApplication =({applicationId:e,options:p})=>X(c(),e,p);var xe=(n=>(n.HTTP="http",n.HTTPS="https",n.HTTP_HTTPS="http,https",n))(xe||{}),Ge= exports.HttpPort =(n=>(n[n.PORT_80=80]="PORT_80",n[n.PORT_8008=8008]="PORT_8008",n[n.PORT_8080=8080]="PORT_8080",n))(Ge||{}),we= exports.HttpsPort =(r=>(r[r.PORT_443=443]="PORT_443",r[r.PORT_8443=8443]="PORT_8443",r[r.PORT_9440=9440]="PORT_9440",r[r.PORT_9441=9441]="PORT_9441",r[r.PORT_9442=9442]="PORT_9442",r[r.PORT_9443=9443]="PORT_9443",r))(we||{}),Fe= exports.TlsVersion =(i=>(i.TLS_1_0="tls_1_0",i.TLS_1_1="tls_1_1",i.TLS_1_2="tls_1_2",i.TLS_1_3="tls_1_3",i))(Fe||{}),De= exports.SupportedCiphers =(a=>(a.ALL="all",a.TLSv1_2_2018="TLSv1.2_2018",a.TLSv1_2_2019="TLSv1.2_2019",a.TLSv1_2_2021="TLSv1.2_2021",a.TLSv1_3_2022="TLSv1.3_2022",a))(De||{});var gt=e=>{let p=c(_optionalChain([e, 'optionalAccess', _187 => _187.token])),t=s(_optionalChain([e, 'optionalAccess', _188 => _188.options, 'optionalAccess', _189 => _189.debug]));return{createApplication:async({data:i})=>J(p,i,{...e,debug:t}),deleteApplication:async({applicationId:i,options:a})=>X(p,i,{..._optionalChain([e, 'optionalAccess', _190 => _190.options]),...a,debug:s(_nullishCoalesce(_optionalChain([e, 'optionalAccess', _191 => _191.options, 'optionalAccess', _192 => _192.debug]), () => (_optionalChain([a, 'optionalAccess', _193 => _193.debug]))))}),getApplication:async({applicationId:i,options:a})=>Z(p,i,{..._optionalChain([e, 'optionalAccess', _194 => _194.options]),...a,debug:s(_nullishCoalesce(_optionalChain([e, 'optionalAccess', _195 => _195.options, 'optionalAccess', _196 => _196.debug]), () => (_optionalChain([a, 'optionalAccess', _197 => _197.debug]))))}),getApplications:async({params:i,options:a})=>V(p,i,{..._optionalChain([e, 'optionalAccess', _198 => _198.options]),...a,debug:s(_optionalChain([a, 'optionalAccess', _199 => _199.debug]))}),putApplication:async({applicationId:i,data:a,options:r})=>H(p,i,a,{..._optionalChain([e, 'optionalAccess', _200 => _200.options]),...r,debug:s(_optionalChain([r, 'optionalAccess', _201 => _201.debug]))}),patchApplication:async({applicationId:i,data:a,options:r})=>Y(p,i,a,{..._optionalChain([e, 'optionalAccess', _202 => _202.options]),...r,debug:s(_optionalChain([r, 'optionalAccess', _203 => _203.debug]))})}};var bn=gt;exports.DeliveryProtocol = xe; exports.HttpPort = Ge; exports.HttpsPort = we; exports.SupportedCiphers = De; exports.TlsVersion = Fe; exports.createApplication = ot; exports.createAzionApplicationClient = gt; exports.createCacheSetting = $e; exports.createDeviceGroup = Me; exports.createFunctionInstance = Ne; exports.createOrigin = Ye; exports.createRule = tt; exports.default = bn; exports.deleteApplication = dt; exports.deleteCacheSetting = Ue; exports.deleteDeviceGroup = We; exports.deleteFunctionInstance = Je; exports.deleteOrigin = Xe; exports.deleteRule = at; exports.getApplication = st; exports.getApplications = pt; exports.getCacheSetting = Ee; exports.getCacheSettings = Le; exports.getDeviceGroup = qe; exports.getDeviceGroups = Be; exports.getFunctionInstance = Ze; exports.getFunctionInstances = Ve; exports.getOrigin = Qe; exports.getOrigins = ke; exports.getRule = nt; exports.getRules = it; exports.patchApplication = ut; exports.putApplication = ct; exports.updateCacheSetting = je; exports.updateDeviceGroup = Ke; exports.updateFunctionInstance = He; exports.updateOrigin = et; exports.updateRule = rt;
