"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; } var _class;var p=process.env.AZION_ENV==="stage"?"https://stage-api.azion.com/v4/storage/buckets":"https://api.azion.com/v4/storage/buckets",l=(o,e,r)=>{let s={message:"Error unknown",operation:r};return o.forEach(t=>{e[t]&&(s={message:Array.isArray(e[t])?e[t].join(", "):e[t],operation:r})}),s},y=async(o,e,r)=>{try{let{page_size:s=10,page:t=1}=e||{},n=new URLSearchParams({page_size:String(s),page:String(t)}),a=await(await fetch(`${p}?${n.toString()}`,{method:"GET",headers:{Accept:"application/json; version=3",Authorization:`Token ${o}`}})).json();return a.results?(r&&console.log("Response:",a),a):(a.error=l(["detail"],a,"get all buckets"),{error:_nullishCoalesce(a.error, () => (JSON.stringify(a)))})}catch(s){throw r&&console.error("Error getting all buckets:",s),s}},h=async(o,e,r,s)=>{try{let n=await(await fetch(p,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Token ${o}`},body:JSON.stringify({name:e,edge_access:r})})).json();return _optionalChain([n, 'optionalAccess', _2 => _2.state])?(s&&console.log("Response:",n),n):(n.error=l(["name","edge_access","detail"],n,"create bucket"),{error:_nullishCoalesce(n.error, () => (JSON.stringify(n)))})}catch(t){throw s&&console.error("Error creating bucket:",t),t}},R=async(o,e,r,s)=>{try{let n=await(await fetch(`${p}/${e}`,{method:"PATCH",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Token ${o}`},body:JSON.stringify({edge_access:r})})).json();return _optionalChain([n, 'optionalAccess', _3 => _3.state])?(s&&console.log("Response:",n),n):(n.error=l(["name","edge_access","detail"],n,"update bucket"),{error:_nullishCoalesce(n.error, () => (JSON.stringify(n)))})}catch(t){throw s&&console.error("Error updating bucket:",t),t}},P=async(o,e,r)=>{try{let t=await(await fetch(`${p}/${e}`,{method:"DELETE",headers:{Accept:"application/json",Authorization:`Token ${o}`}})).json();return _optionalChain([t, 'optionalAccess', _4 => _4.state])?(r&&console.log("Response Delete Bucket:",t),t):(t.error=l(["detail"],t,"delete bucket"),{error:_nullishCoalesce(t.error, () => (JSON.stringify(t)))})}catch(s){throw r&&console.error("Error deleting bucket:",s),s}},S=async(o,e,r,s)=>{try{let{max_object_count:t=1e4}=r||{},n=new URLSearchParams({max_object_count:String(t)}),a=await(await fetch(`${p}/${e}/objects?${n.toString()}`,{method:"GET",headers:{Accept:"application/json",Authorization:`Token ${o}`}})).json();return a.results?(s&&console.log("Response:",a),a):(a.error=l(["detail"],a,"get all objects"),{error:_nullishCoalesce(a.error, () => (JSON.stringify(a)))})}catch(t){throw s&&console.error("Error getting all objects:",t),t}},f=async(o,e,r,s,t)=>{try{let i=await(await fetch(`${p}/${e}/objects/${r}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/octet-stream",Authorization:`Token ${o}`},body:s})).json();return _optionalChain([i, 'optionalAccess', _5 => _5.state])?(t&&console.log("Response:",i),i):(i.error=l(["detail"],i,"create object"),{error:_nullishCoalesce(i.error, () => (JSON.stringify(i)))})}catch(n){throw t&&console.error("Error posting object:",n),n}},w=async(o,e,r,s)=>{try{let t=await fetch(`${p}/${e}/objects/${r}`,{method:"GET",headers:{Accept:"application/json",Authorization:`Token ${o}`}});if(t.headers.get("content-type")==="application/json"){let i=await t.json();return{error:_nullishCoalesce(l(["detail"],i,"get all objects"), () => (JSON.stringify(i)))}}let n=await t.text();return s&&console.log("Response:",n),{data:n}}catch(t){throw s&&console.error("Error getting object by name:",t),t}},C=async(o,e,r,s,t)=>{try{let i=await(await fetch(`${p}/${e}/objects/${r}`,{method:"PUT",headers:{Accept:"application/json","Content-Type":"application/octet-stream",Authorization:`Token ${o}`},body:s})).json();return t&&console.log("Response:",i),i}catch(n){throw t&&console.error("Error putting object:",n),n}},E=async(o,e,r,s)=>{try{let n=await(await fetch(`${p}/${e}/objects/${r}`,{method:"DELETE",headers:{Accept:"application/json",Authorization:`Token ${o}`}})).json();return _optionalChain([n, 'optionalAccess', _6 => _6.state])?(s&&console.log("Response:",n),n):(n.error=l(["detail"],n,"delete object"),{error:_nullishCoalesce(n.error, () => (JSON.stringify(n)))})}catch(t){throw s&&console.error("Error deleting object:",t),t}};function d(o){return o.replace(/^\//,"")}var A=async(o,e=1e3)=>{let r=0,s=12e4,t=Date.now();for(;Date.now()-t<s;)try{return await o()}catch (e2){if(r===0&&console.warn("Attempting to synchronize. The content may not be synchronized on the edge yet."),Date.now()-t>=s)throw new Error("Max retry time reached");console.log(`Retry attempt ${r+1} failed. Retrying in ${e*Math.pow(2,r)} ms...`),await new Promise(i=>setTimeout(i,e*Math.pow(2,r))),r++}throw new Error("Max retry time reached")},B=async(o,e,r)=>{let t=await y(o,{page_size:1e6},_nullishCoalesce(_optionalChain([r, 'optionalAccess', _7 => _7.debug]), () => (!1))),n=t.results;return t.error?{error:t.error}:n?{data:n.find(a=>a.name===e)}:{error:{message:"Failed to retrieve buckets.",operation:"getBuckets"}}};var T=()=>_optionalChain([globalThis, 'access', _8 => _8.Azion, 'optionalAccess', _9 => _9.Sql])||null,u= (_class =class{constructor(e,r){;_class.prototype.__init.call(this);_class.prototype.__init2.call(this);_class.prototype.__init3.call(this);this.token=e;this.debug=r}__init() {this.storage=null}initializeStorage(e){this.storage||(this.storage=new globalThis.Azion.Storage(e))}__init2() {this.name=""}__init3() {this.edge_access="unknown"}async getBucket({name:e}){return this.initializeStorage(e),this.storage?(this.name=e,{name:e,edge_access:"unknown",state:"executed-runtime",getObjects:this.getObjects.bind(this),getObjectByKey:this.getObjectByKey.bind(this),createObject:this.createObject.bind(this),updateObject:this.updateObject.bind(this),deleteObject:this.deleteObject.bind(this)}):null}async getObjects({params:e}){this.initializeStorage(this.name);try{let r=await A(()=>this.storage.list()),s=_nullishCoalesce(_optionalChain([e, 'optionalAccess', _10 => _10.max_object_count]), () => (r.entries.length)),t=await Promise.all(r.entries.slice(0,s).map(async n=>({key:d(n.key),size:n.content_length,state:"executed-runtime"})));return{data:{objects:t,count:t.length}}}catch(r){return this.debug&&console.error("Error getting objects:",r),{error:{message:_nullishCoalesce(_optionalChain([r, 'optionalAccess', _11 => _11.message]), () => ("Error getting objects")),operation:"getObjects"}}}}async getObjectByKey({key:e}){this.initializeStorage(this.name);try{let r=await A(()=>this.storage.get(e)),s=await r.arrayBuffer(),n=new TextDecoder().decode(s);return{data:{state:"executed-runtime",key:d(e),size:r.contentLength,content:n,content_type:r.metadata.get("content-type")}}}catch(r){return this.debug&&console.error("Error getting object by key:",r),{error:{message:_nullishCoalesce(_optionalChain([r, 'optionalAccess', _12 => _12.message]), () => ("Error getting object by key")),operation:"getObjectByKey"}}}}async createObject({key:e,content:r,options:s}){this.initializeStorage(this.name);try{let t=new TextEncoder().encode(r);return await A(()=>this.storage.put(e,t,{"content-type":_optionalChain([s, 'optionalAccess', _13 => _13.content_type])})),{data:{state:"executed-runtime",key:d(e),size:t.byteLength,content_type:_optionalChain([s, 'optionalAccess', _14 => _14.content_type]),content:r}}}catch(t){return this.debug&&console.error("Error creating object:",t),{error:{message:_nullishCoalesce(_optionalChain([t, 'optionalAccess', _15 => _15.message]), () => ("Error creating object")),operation:"createObject"}}}}async updateObject({key:e,content:r,options:s}){return this.createObject({key:e,content:r,options:s})}async deleteObject({key:e}){this.initializeStorage(this.name);try{return await A(()=>this.storage.delete(e)),{data:{key:d(e),state:"executed-runtime"}}}catch(r){return this.debug&&console.error("Error deleting object:",r),{error:{message:_nullishCoalesce(_optionalChain([r, 'optionalAccess', _16 => _16.message]), () => ("Error deleting object")),operation:"deleteObject"}}}}}, _class);var L=process.env.AZION_DEBUG&&process.env.AZION_DEBUG==="true",c=o=>_nullishCoalesce(_nullishCoalesce(o, () => (process.env.AZION_TOKEN)), () => ("")),g=o=>_nullishCoalesce(o, () => (!!L)),b=(o,e)=>(...r)=>T()?o(...r):e(...r),_= exports.createBucketMethod =async(o,e,r,s)=>{let t=await h(c(o),e,r,g(_optionalChain([s, 'optionalAccess', _17 => _17.debug])));return t.data?{data:{...t.data,getObjects:({params:n})=>m(o,e,n),getObjectByKey:({key:n})=>z(o,e,n),createObject:({key:n,content:i})=>j(o,e,n,i),updateObject:({key:n,content:i})=>O(o,e,n,i),deleteObject:({key:n})=>k(o,e,n)}}:{error:t.error}},$= exports.deleteBucketMethod =async(o,e,r)=>{let s=await P(c(o),e,g(_optionalChain([r, 'optionalAccess', _18 => _18.debug])));return s.data?{data:{name:s.data.name,state:s.state}}:{error:s.error}},x= exports.getBucketsMethod =async(o,e,r)=>{let s=await y(c(o),e,g(_optionalChain([r, 'optionalAccess', _19 => _19.debug])));if(_optionalChain([s, 'optionalAccess', _20 => _20.results])&&s.results.length>0){let t=_optionalChain([s, 'access', _21 => _21.results, 'optionalAccess', _22 => _22.map, 'call', _23 => _23(n=>({...n,getObjects:({params:i})=>m(o,n.name,i),getObjectByKey:({key:i})=>z(o,n.name,i),createObject:({key:i,content:a})=>j(o,n.name,i,a),updateObject:({key:i,content:a})=>O(o,n.name,i,a),deleteObject:({key:i})=>k(o,n.name,i)}))]);return{data:{buckets:t,count:_nullishCoalesce(s.count, () => (t.length))}}}return{error:s.error}},D=b(async(o,e,r)=>{let s=await B(o,e,r);if(s.error||!_optionalChain([s, 'access', _24 => _24.data, 'optionalAccess', _25 => _25.name]))return{error:{message:_nullishCoalesce(_optionalChain([s, 'access', _26 => _26.error, 'optionalAccess', _27 => _27.message]), () => ("Bucket not found")),operation:"get bucket"}};let n=await new u(o,_optionalChain([r, 'optionalAccess', _28 => _28.debug])).getBucket({name:e});return n?{data:n}:{error:{message:"Failed to retrieve bucket",operation:"get bucket"}}},async(o,e,r)=>{let s=await B(o,e,r);return s.error||!_optionalChain([s, 'access', _29 => _29.data, 'optionalAccess', _30 => _30.name])?{error:{message:_nullishCoalesce(_optionalChain([s, 'access', _31 => _31.error, 'optionalAccess', _32 => _32.message]), () => ("Bucket not found")),operation:"get bucket"}}:{data:{name:s.data.name,edge_access:_optionalChain([s, 'access', _33 => _33.data, 'optionalAccess', _34 => _34.edge_access]),getObjects:({params:t})=>m(o,e,t),getObjectByKey:({key:t})=>z(o,e,t),createObject:({key:t,content:n})=>j(o,e,t,n),updateObject:({key:t,content:n})=>O(o,e,t,n),deleteObject:({key:t})=>k(o,e,t)}}}),v= exports.updateBucketMethod =async(o,e,r,s)=>{let t=await R(c(o),e,r,g(_optionalChain([s, 'optionalAccess', _35 => _35.debug])));return _optionalChain([t, 'optionalAccess', _36 => _36.data])?{data:{...t.data,getObjects:({params:n})=>m(o,e,n),getObjectByKey:({key:n})=>z(o,e,n),createObject:({key:n,content:i})=>j(o,e,n,i),updateObject:({key:n,content:i})=>O(o,e,n,i),deleteObject:({key:n})=>k(o,e,n)}}:{error:t.error}},m=b(async(o,e,r,s)=>{let t=new u(o,_optionalChain([s, 'optionalAccess', _37 => _37.debug]));t.name=e;let n=await t.getObjects({params:r});return n.data?{data:n.data}:{error:{message:"Failed to retrieve objects",operation:"get objects"}}},async(o,e,r,s)=>{let t=await S(c(o),e,r,_optionalChain([s, 'optionalAccess', _38 => _38.debug]));return t.results?{data:{objects:t.results,count:t.results.length}}:{error:_optionalChain([t, 'optionalAccess', _39 => _39.error])}}),z=b(async(o,e,r,s)=>{let t=new u(o,_optionalChain([s, 'optionalAccess', _40 => _40.debug]));t.name=e;let n=await t.getObjectByKey({key:r});return n.data?{data:n.data}:{error:{message:"Failed to retrieve object",operation:"get object by key"}}},async(o,e,r,s)=>{let t=await w(c(o),e,r,g(_optionalChain([s, 'optionalAccess', _41 => _41.debug])));return t.data?{data:{key:r,content:t.data}}:{error:t.error}}),j=b(async(o,e,r,s,t)=>{let n=new u(o,_optionalChain([t, 'optionalAccess', _42 => _42.debug]));n.name=e;let i=await n.createObject({key:r,content:s});return _optionalChain([i, 'optionalAccess', _43 => _43.data])?{data:i.data}:{error:{message:"Failed to create object",operation:"create object"}}},async(o,e,r,s,t)=>{let n=await f(c(o),e,r,s,g(_optionalChain([t, 'optionalAccess', _44 => _44.debug])));return n.data?{data:{key:n.data.object_key,content:s,state:n.state}}:{error:n.error}}),O=b(async(o,e,r,s,t)=>{let n=new u(o,_optionalChain([t, 'optionalAccess', _45 => _45.debug]));n.name=e;let i=await n.updateObject({key:r,content:s});return _optionalChain([i, 'optionalAccess', _46 => _46.data])?{data:i.data}:{error:i.error}},async(o,e,r,s,t)=>{let n=await C(c(o),e,r,s,g(_optionalChain([t, 'optionalAccess', _47 => _47.debug])));return n.data?{data:{key:n.data.object_key,content:s,state:n.state}}:{error:n.error}}),k=b(async(o,e,r,s)=>{let t=new u(o,_optionalChain([s, 'optionalAccess', _48 => _48.debug]));t.name=e;let n=await t.deleteObject({key:r});return n.data?{data:n.data}:{error:n.error}},async(o,e,r,s)=>{let t=await E(c(o),e,r,g(_optionalChain([s, 'optionalAccess', _49 => _49.debug])));return t.data?{data:{key:r,state:t.state}}:{error:t.error}}),Z= exports.createBucket =({name:o,edge_access:e,options:r})=>_(c(),o,e,{...r,debug:g(_optionalChain([r, 'optionalAccess', _50 => _50.debug]))}),q= exports.deleteBucket =({name:o,options:e})=>$(c(),o,{...e,debug:g(_optionalChain([e, 'optionalAccess', _51 => _51.debug]))}),V= exports.getBuckets =({params:o,options:e})=>x(c(),o,{...e,debug:g(_optionalChain([e, 'optionalAccess', _52 => _52.debug]))}),H= exports.getBucket =({name:o,options:e})=>D(c(),o,{...e,debug:g(_optionalChain([e, 'optionalAccess', _53 => _53.debug]))}),Q= exports.updateBucket =({name:o,edge_access:e,options:r})=>v(c(),o,e,{...r,debug:g(_optionalChain([r, 'optionalAccess', _54 => _54.debug]))}),X= exports.getObjects =({bucket:o,params:e,options:r})=>m(c(),o,e,r),Y= exports.createObject =({bucket:o,key:e,content:r,options:s})=>j(c(),o,e,r,{...s,debug:g(_optionalChain([s, 'optionalAccess', _55 => _55.debug]))}),ee= exports.getObjectByKey =({bucket:o,key:e,options:r})=>z(c(),o,e,{...r,debug:g(_optionalChain([r, 'optionalAccess', _56 => _56.debug]))}),te= exports.updateObject =({bucket:o,key:e,content:r,options:s})=>O(c(),o,e,r,{...s,debug:g(_optionalChain([s, 'optionalAccess', _57 => _57.debug]))}),re= exports.deleteObject =({bucket:o,key:e,options:r})=>k(c(),o,e,{...r,debug:g(_optionalChain([r, 'optionalAccess', _58 => _58.debug]))}),N= exports.createClient =o=>{let e=c(_optionalChain([o, 'optionalAccess', _59 => _59.token])),r=g(_optionalChain([o, 'optionalAccess', _60 => _60.options, 'optionalAccess', _61 => _61.debug]));return{getBuckets:t=>x(e,_optionalChain([t, 'optionalAccess', _62 => _62.params]),{...o,debug:r}),createBucket:({name:t,edge_access:n})=>_(e,t,n,{...o,debug:r}),updateBucket:({name:t,edge_access:n})=>v(e,t,n,{...o,debug:r}),deleteBucket:({name:t})=>$(e,t,{...o,debug:r}),getBucket:({name:t})=>D(e,t,{...o,debug:r})}};var oe=N;exports.createBucket = Z; exports.createBucketMethod = _; exports.createClient = N; exports.createObject = Y; exports.default = oe; exports.deleteBucket = q; exports.deleteBucketMethod = $; exports.deleteObject = re; exports.getBucket = H; exports.getBuckets = V; exports.getBucketsMethod = x; exports.getObjectByKey = ee; exports.getObjects = X; exports.updateBucket = Q; exports.updateBucketMethod = v; exports.updateObject = te;
